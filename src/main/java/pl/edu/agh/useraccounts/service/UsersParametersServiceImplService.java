package pl.edu.agh.useraccounts.service;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.7.7
 * 2013-12-21T09:54:04.614+01:00
 * Generated source version: 2.7.7
 * 
 */
@WebServiceClient(name = "UsersParametersServiceImplService", 
                  wsdlLocation = "UsersParametersService.wsdl",
                  targetNamespace = "http://service.useraccounts.agh.edu.pl/") 
public class UsersParametersServiceImplService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://service.useraccounts.agh.edu.pl/", "UsersParametersServiceImplService");
    public final static QName UsersParametersServiceImplPort = new QName("http://service.useraccounts.agh.edu.pl/", "UsersParametersServiceImplPort");
    static {
        URL url = UsersParametersServiceImplService.class.getResource("UsersParametersService.wsdl");
        if (url == null) {
            url = UsersParametersServiceImplService.class.getClassLoader().getResource("UsersParametersService.wsdl");
        } 
        if (url == null) {
            java.util.logging.Logger.getLogger(UsersParametersServiceImplService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "UsersParametersService.wsdl");
        }       
        WSDL_LOCATION = url;
    }

    public UsersParametersServiceImplService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public UsersParametersServiceImplService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public UsersParametersServiceImplService() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     *
     * @return
     *     returns UsersParametersService
     */
    @WebEndpoint(name = "UsersParametersServiceImplPort")
    public UsersParametersService getUsersParametersServiceImplPort() {
        return super.getPort(UsersParametersServiceImplPort, UsersParametersService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns UsersParametersService
     */
    @WebEndpoint(name = "UsersParametersServiceImplPort")
    public UsersParametersService getUsersParametersServiceImplPort(WebServiceFeature... features) {
        return super.getPort(UsersParametersServiceImplPort, UsersParametersService.class, features);
    }

}
